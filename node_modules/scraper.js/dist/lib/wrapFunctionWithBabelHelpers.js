'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _babelGenerator = require('babel-generator');

var _babelGenerator2 = _interopRequireDefault(_babelGenerator);

var _babelHelpers = require('babel-helpers');

var helpers = _interopRequireWildcard(_babelHelpers);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var parseFunc = /^function[^(]*\(([^)]*)\) {((?:.|\s)*)}$/;
var helperFns = helpers.list.map(function (fnName) {
  return 'var _' + fnName + ' = ' + (0, _babelGenerator2.default)(helpers.get(fnName)).code + ';';
}).join('\n');

exports.default = function (fn) {
  var fnStr = fn.toString();

  var _fnStr$match = fnStr.match(parseFunc);

  var _fnStr$match2 = _slicedToArray(_fnStr$match, 3);

  var args = _fnStr$match2[1];
  var body = _fnStr$match2[2];

  return new Function(args, helperFns + body); // eslint-disable-line no-new-func
};